package ch09.polymorphysm;

/*
多态是同一个行为具有多个不同表现形式或形态的能力。多态性是对象多种表现形式的体现
当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的同名方法。
多态的好处：可以使程序有良好的扩展，并可以对所有子类的对象进行通用处理。
------------
多态的优点
1. 消除类型之间的耦合关系
2. 可替换性
3. 可扩充性
4. 接口性
5. 灵活性
6. 简化性
-------------
多态存在的三个条件
1. 继承
2. 重写
3. 父类引用指向子类对象
-------------
重载与重写
重写：在子类存在方法与父类方法的名字相同，而且参数的个数与类型一样，返回值也一样的方法
重载；在**一个类**中定义了多个方法名相同，而他们的参数的数量不同或者数量相同而类型和次序不同
重载时一个类的多态性体现，而重写是子类与父类的一种多态性表现
 */

public class Polymorphysm {
}
